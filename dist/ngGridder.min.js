/**
 * ngGridder

 * Combine AngularJS and Twitter Bootstrap grid system into an editable grid (codename laughing-meme). Every grid panel loads a directive for settings and the content.

 * @version v0.1.3 - 2014-02-21
 * @link https://github.com/eonlepapillon/ngGridder
 * @author Peter Ahlers (eonlepapillon) <eonlepapillon@gmail.com> https://github.com/eonlepapillon
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
angular.module("ngGridder",[]).provider("ngGridderSettings",function(){"use strict";var a=this,b={path:{panelDir:"./views/panels/",panelHtml:"/panel.html",settingsHtml:"/settings.html"},template:{ngGridder:"ngGridder.html",ngGridderRow:"ngGridder-row.html",ngGridderCol:"ngGridder-col.html"},panel:{minWidth:1,maxWidth:12}};this.get=function(){return b},this.set=function(a){return jQuery.extend(!0,b,a)},this.$get=function(){return{get:function(){return a.get()},set:function(b){return a.set(b)}}}}).directive("ngGridderCol",["$http","$templateCache","$compile","$log","ngGridderSettings",function(a,b,c,d,e){"use strict";var f=e.get();return{templateUrl:f.template.ngGridderCol,restrict:"E",replace:!0,controller:["$scope",function(a){a.showSettings=!1,a.minWidth=f.panel.minWidth,a.maxWidth=f.panel.maxWidth,a.colLockPosition=a.rowLockPosition,void 0!==a.col.lockPosition&&(a.colLockPosition=a.col.lockPosition),a.master={settings:angular.copy(a.col.settings),width:angular.copy(a.col.width)},a.$watch("col.width",function(){a.colClasses="",angular.forEach(a.col.width,function(b,c){a.colClasses+="col-"+c+"-"+b+" "})},!0),a.toggleSettings=function(){a.showSettings=!a.showSettings},a.remove=function(){a.removeCol(a.$index)},a.add=function(){a.addCol(a.$index+1)},a.left=function(){a.first||a.moveToLeftCol(a.$index)},a.right=function(){a.last||a.moveToRightCol(a.$index)},a.save=function(){a.master.settings=angular.copy(a.col.settings),a.master.width=angular.copy(a.col.width),a.showSettings=!1,a.saveColSettings()},a.cancel=function(){a.col.settings=angular.copy(a.master.settings),a.col.width=angular.copy(a.master.width)}}],link:function(e,g){e.$watch("col.type",function(){if(d.log("ngGridder: start loading",e.col.type),e.col.type){var h=e.$new(),i=f.path,j=i.panelDir+e.col.type+i.panelHtml,k=i.panelDir+e.col.type+i.settingsHtml,l=function(a,b,d){var e=c(b)(d);d.$on("$destroy",function(){e.unbind(),e.remove()}),g.find(a).append(e)};e.col.settings&&(h.settings=e.col.settings),b.get(j)?(d.log("ngGridder: load panel from cache",j),l(".ng-gridder-panel-content",b.get(j),h)):(d.log("ngGridder: load panel from url",j),a.get(j).success(function(a){l(".ng-gridder-panel-content",b.put(j,a),h)}).error(function(){d.error("ngGridder: error, can't find panel template:",j)})),b.get(k)?(d.log("ngGridder: load settings from cache",k),l(".ng-gridder-settings-content",b.get(k),h)):(d.log("ngGridder: load settings from url",k),a.get(k).success(function(a){l(".ng-gridder-settings-content",b.put(k,a),h)}).error(function(){d.error("ngGridder: error, can't find settings template:",k)}))}else e.showSettings=!0,d.log("ngGridder: added new panel")})}}}]).directive("ngGridderRow",["$log","ngGridderSettings",function(a,b){"use strict";var c=b.get();return{templateUrl:c.template.ngGridderRow,restrict:"E",replace:!0,controller:["$scope",function(b){var c=this;b.name=b.row.name,b.cols=b.row.cols,b.rowLockPosition=b.globalLockPosition,void 0!==b.row.lockPosition&&(b.rowLockPosition=b.row.lockPosition),b.remove=function(){b.removeRow(b.$index)},b.add=function(){b.addRow(b.$index+1)},b.up=function(){b.$first||b.moveToUpRow(b.$index)},b.down=function(){b.last||b.moveToDownRow(b.$index)},b.removeCol=function(c){angular.isNumber(c)&&(b.cols.splice(c,1),b.changed(),a.log("ngGridder: remove col",c))},b.addCol=function(c){angular.isNumber(c)||(c=b.cols.length),b.cols.splice(c,0,{settings:{},width:{xs:12,sm:12,md:6,lg:3}}),b.changed(),a.log("ngGridder: add col")},this.moveTo=function(a,c){if(!(b.cols.length<=1)){var d=b.cols.splice(a,1);b.cols.splice(a+c,0,d[0]),b.changed()}},b.moveToLeftCol=function(a){c.moveTo(a,-1)},b.moveToRightCol=function(a){c.moveTo(a,1)},b.saveColSettings=function(){b.changed()}}]}}]).directive("ngGridder",["$log","ngGridderSettings",function(a,b){"use strict";var c=b.get();return{templateUrl:c.template.ngGridder,restrict:"E",replace:!0,scope:{globalLockPosition:"=lockPosition",layout:"=",types:"=panelTypes",changedImplementation:"&changed"},controller:["$scope",function(b){var c=this;return angular.isArray(b.layout)?(b.changed=function(){b.changedImplementation(),a.log("ngGridder: layout changed")},b.removeRow=function(c){angular.isNumber(c)&&(b.layout.splice(c,1),b.changed(),a.log("ngGridder: remove row",c))},b.addRow=function(c){angular.isNumber(c)||(c=b.layout.length),b.layout.splice(c,0,{cols:[]}),b.changed(),a.log("ngGridder: add row",c)},this.moveTo=function(a,c){if(angular.isNumber(a)&&!(b.layout.length<=1)){var d=b.layout.splice(a,1);b.layout.splice(a+c,0,d[0]),b.changed()}},b.moveToUpRow=function(b){c.moveTo(b,-1),a.log("ngGridder: moved a row up",b)},void(b.moveToDownRow=function(b){c.moveTo(b,1),a.log("ngGridder: moved a row down",b)})):void a.error("ngGridder: need an (empty) layout")}]}}]);