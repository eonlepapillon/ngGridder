/**
 * ng-gridder
 * @version v0.0.1 - 2014-02-17
 * @link https://github.com/eonlepapillon/ng-gridder
 * @author Peter Ahlers (eonlepapillon) <eonlepapillon@gmail.com> https://github.com/eonlepapillon
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
angular.module("ngGridder",[]).provider("ngGridderSettings",function(){"use strict";var a={path:{panelDir:"./views/panels/",panelHtml:"/panel.html",settingsHtml:"/settings.html"},template:{ngGridder:"ng-gridder.html",ngGridderRow:"ng-gridder-row.html",ngGridderCol:"ng-gridder-col.html"},panel:{minWidth:1,maxWidth:12}},b=this.get=function(){return a},c=this.set=function(b){return jQuery.extend(!0,a,b)};this.$get=function(){return{get:function(){return b()},set:function(a){return c(a)}}}}).directive("ngGridderCol",["$http","$templateCache","$compile","ngGridderSettings",function(a,b,c,d){"use strict";var e=d.get();return{templateUrl:e.template.ngGridderCol,restrict:"E",replace:!0,controller:["$scope",function(a){a.showSettings=!1,a.minWidth=e.panel.minWidth,a.maxWidth=e.panel.maxWidth,a.master={settings:angular.copy(a.col.settings),width:angular.copy(a.col.width)},a.$watch("col.width",function(){a.colClasses="",angular.forEach(a.col.width,function(b,c){a.colClasses+="col-"+c+"-"+b+" "})},!0),a.toggleSettings=function(){a.showSettings=!a.showSettings},a.remove=function(){a.removeCol(a.$index)},a.add=function(){a.addCol(a.$index+1)},a.left=function(){a.first||a.leftCol(a.$index)},a.right=function(){a.last||a.rightCol(a.$index)},a.save=function(){a.master.settings=angular.copy(a.col.settings),a.master.width=angular.copy(a.col.width),a.showSettings=!1,a.saveColSettings()},a.cancel=function(){console.log("cancel",a.master,a.col),a.col.settings=angular.copy(a.master.settings),a.col.width=angular.copy(a.master.width)}}],link:function(d,f){d.$watch("col.type",function(){if(console.log("ngGridder: start loading",d.col.type),d.col.type){var g=d.$new(),h=e.path,i=h.panelDir+d.col.type+h.panelHtml,j=h.panelDir+d.col.type+h.settingsHtml,k=function(a,b,d){var e=c(b)(d);d.$on("$destroy",function(){e.unbind(),e.remove()}),f.find(a).append(e)};d.col.settings&&(g.settings=d.col.settings),b.get(i)?(console.log("ngGridder: load panel from cache",i),k(".ng-gridder-panel-content",b.get(i),g)):(console.log("ngGridder: load panel from url",i),a.get(i).success(function(a){k(".ng-gridder-panel-content",b.put(i,a),g)}).error(function(){console.error("ngGridder: error, can't find panel template:",i)})),b.get(j)?(console.log("ngGridder: load settings from cache",j),k(".ng-gridder-settings-content",b.get(j),g)):(console.log("ngGridder: load settings from url",j),a.get(j).success(function(a){k(".ng-gridder-settings-content",b.put(j,a),g)}).error(function(){console.error("ngGridder: error, can't find settings template:",j)}))}else d.showSettings=!0,console.log("ngGridder: added new panel")})}}}]).directive("ngGridderRow",["ngGridderSettings",function(a){"use strict";var b=a.get();return{templateUrl:b.template.ngGridderRow,restrict:"E",replace:!0,controller:["$scope",function(a){a.name=a.row.name,a.cols=a.row.cols,a.remove=function(){a.removeRow(a.$index)},a.add=function(){a.addRow(a.$index+1)},a.up=function(){a.$first||a.upRow(a.$index)},a.down=function(){a.last||a.downRow(a.$index)},a.removeCol=function(b){angular.isNumber(b)&&(a.cols.splice(b,1),a.changed(),console.log("ngGridder: remove col",b))},a.addCol=function(b){angular.isNumber(b)||(b=a.cols.length),a.cols.splice(b,0,{settings:{},width:{xs:12,sm:12,md:6,lg:3}}),a.changed(),console.log("ngGridder: add col")},a.leftCol=function(b){if(!(a.cols.length<=1)){var c=a.cols.splice(b,1);a.cols.splice(b-1,0,c[0]),a.changed()}},a.rightCol=function(b){if(!(a.cols.length<=1)){var c=a.cols.splice(b,1);a.cols.splice(b+1,0,c[0]),a.changed()}},a.saveColSettings=function(){a.changed()}}]}}]).directive("ngGridder",["ngGridderSettings",function(a){"use strict";var b=a.get();return{templateUrl:b.template.ngGridder,restrict:"E",replace:!0,scope:{editable:"=",layout:"=",types:"=panelTypes",changedImplementation:"&changed"},controller:["$scope",function(a){return angular.isArray(a.layout)?(a.changed=function(){a.changedImplementation(),console.log("ngGridder: layout changed")},a.removeRow=function(b){angular.isNumber(b)&&(a.layout.splice(b,1),a.changed(),console.log("ngGridder: remove row",b))},a.addRow=function(b){angular.isNumber(b)||(b=a.layout.length),a.layout.splice(b,0,{cols:[]}),a.changed(),console.log("ngGridder: add row",b)},a.upRow=function(b){if(angular.isNumber(b)&&!(a.layout.length<=1)){var c=a.layout.splice(b,1);a.layout.splice(b-1,0,c[0]),a.changed(),console.log("ngGridder: moved a row up",b)}},void(a.downRow=function(b){if(angular.isNumber(b)&&!(a.layout.length<=1)){var c=a.layout.splice(b,1);a.layout.splice(b+1,0,c[0]),a.changed(),console.log("ngGridder: moved a row down",b)}})):void console.error("ngGridder: need an (empty) layout")}]}}]);